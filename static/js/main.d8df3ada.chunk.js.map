{"version":3,"sources":["Components/Task/AddTask/AddTask.js","Components/Task/TaskItem/TaskItem.js","Components/Task/TaskList/TaskList.js","Components/App/App.js","index.js"],"names":["AddTask","state","text","checked","date","Date","toISOString","slice","handleDate","e","setState","target","value","handleText","handleCheckbox","handleClick","props","addTask","trim","className","type","placeholder","this","onChange","htmlFor","id","min","onClick","React","Component","TaskItem","task","deleteTask","doneTask","active","important","toUpperCase","finishDate","TaskList","tasks","activeTasks","filter","item","doneTasks","reverse","length","sort","a","b","toLowerCase","taskActive","map","key","taskDone","App","counter","prevState","changeTaskStatus","forEach","toLocaleString","ReactDOM","render","document","getElementById"],"mappings":"uVAkFeA,G,uNA9EbC,MAAQ,CACNC,KAAM,GACNC,SAAS,EACTC,MAAM,IAAIC,MAAOC,cAAcC,MAAM,EAAG,K,EAG1CC,WAAa,SAACC,GACZ,EAAKC,SAAS,CACZN,KAAMK,EAAEE,OAAOC,S,EAInBC,WAAa,SAACJ,GACZ,EAAKC,SAAS,CACZR,KAAMO,EAAEE,OAAOC,S,EAInBE,eAAiB,SAACL,GAChB,EAAKC,SAAS,CACZP,QAASM,EAAEE,OAAOR,W,EAItBY,YAAc,WAAO,IAAD,EACe,EAAKd,MAA9BC,EADU,EACVA,KAAMC,EADI,EACJA,QAASC,EADL,EACKA,KACP,EAAKY,MAAMC,QAAQf,EAAKgB,OAAQd,EAAMD,IAEpD,EAAKO,SAAS,CACZR,KAAM,GACNC,SAAS,EACTC,MAAM,IAAIC,MAAOC,cAAcC,MAAM,EAAG,O,wEAM5C,OACE,yBAAKY,UAAU,WACb,6BACE,2BACEC,KAAK,OACLD,UAAU,YACVE,YAAY,eACZT,MAAOU,KAAKrB,MAAMC,KAClBqB,SAAUD,KAAKT,cAGnB,yBAAKM,UAAU,WACb,2BAAOK,QAAQ,OAAOL,UAAU,aAAhC,SACA,2BACEC,KAAK,OACLK,GAAG,OACHN,UAAU,YACVP,MAAOU,KAAKrB,MAAMG,KAClBsB,IAAKJ,KAAKrB,MAAMG,KAChBmB,SAAUD,KAAKd,aAEjB,2BACEY,KAAK,WACLK,GAAG,YACHN,UAAU,gBACVhB,QAASmB,KAAKrB,MAAME,QACpBoB,SAAUD,KAAKR,iBAEjB,2BAAOU,QAAQ,YAAYL,UAAU,iBAArC,cAEF,4BACEQ,QAASL,KAAKP,YACdI,UAAU,UAFZ,Y,GApEcS,IAAMC,YCoCbC,G,YApCE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAEpC,OAAIF,EAAKG,OAEL,yBAAKf,UAAU,YACZY,EAAKI,UACJ,uBAAGhB,UAAU,OAAOY,EAAK7B,KAAKkC,eAAqB,2BAAIL,EAAK7B,MAE9D,+BAAQ6B,EAAK3B,MACb,4BAAQuB,QAAS,kBAAMM,EAASF,EAAKN,KAAKN,UAAU,WAApD,QAGA,4BAAQQ,QAAS,kBAAMK,EAAWD,EAAKN,KAAKN,UAAU,YAAtD,MAOF,6BACE,yBAAKA,UAAU,gBACb,uBAAGA,UAAU,YAAYY,EAAK7B,KAA9B,IAAoC,2BAAG,mCAAS6B,EAAK3B,KAAd,OACvC,6BACE,uBAAGe,UAAU,QAAb,SAA2BY,EAAKM,aAElC,4BAAQV,QAAS,kBAAMK,EAAWD,EAAKN,KAAKN,UAAU,YAAtD,SCSKmB,EAjCE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOP,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAE/BO,EAAcD,EAAME,QAAO,SAAAC,GAAI,OAAoB,IAAhBA,EAAKR,UACxCS,EAAYJ,EAAME,QAAO,SAAAC,GAAI,OAAoB,IAAhBA,EAAKR,UAE5CS,EAAUC,UACNJ,EAAYK,OAAS,GACvBL,EAAYM,MAAK,SAACC,EAAGC,GAGnB,OAFAD,EAAIA,EAAE7C,KAAK+C,gBACXD,EAAIA,EAAE9C,KAAK+C,gBACQ,EACfF,EAAIC,EAAU,EACX,KAIX,IAAME,EAAaV,EAAYW,KAAI,SAAAT,GAAI,OAAI,kBAAC,EAAD,CAAUU,IAAKV,EAAKjB,GAAIM,KAAMW,EAAMV,WAAYA,EAAYC,SAAUA,OAC3GoB,EAAWV,EAAUQ,KAAI,SAAAT,GAAI,OAAI,kBAAC,EAAD,CAAUU,IAAKV,EAAKjB,GAAIM,KAAMW,EAAMV,WAAYA,EAAYC,SAAUA,OAE7G,OACE,oCACGM,EAAMM,OAAS,EACd,yBAAK1B,UAAU,YACZ+B,EAAWJ,QAEZ,KAEHH,EAAUE,OAAS,EAAI,4CAAuB,KAC/C,6BAAMQ,EAAS9C,MAAM,EAAG,MCoCf+C,E,2MA9DbC,QAAU,E,EACVtD,MAAQ,CACNsC,MAAO,I,EAGTtB,QAAU,SAACf,EAAME,EAAM+B,GACrB,GAAIjC,EAAK2C,OAAS,EAAG,CAEnB,IAAMd,EACN,CACEN,GAAI,EAAK8B,QACTrD,OACAE,OACA+B,YACAD,QAAQ,EACRG,WAAY,IAOd,OALA,EAAKkB,UAEL,EAAK7C,UAAS,SAAC8C,GAAD,MAAgB,CAC5BjB,MAAM,GAAD,mBAAMiB,EAAUjB,OAAhB,CAAuBR,SAEvB,I,EAIXC,WAAa,SAACP,GACZ,IAAIc,EAAK,YAAO,EAAKtC,MAAMsC,OAC3BA,EAAQA,EAAME,QAAO,SAAAC,GAAI,OAAIA,EAAKjB,KAAOA,KACzC,EAAKf,SAAS,CACZ6B,W,EAIJkB,iBAAmB,SAAChC,GAClB,IAAMc,EAAK,YAAO,EAAKtC,MAAMsC,OAC7BA,EAAMmB,SAAQ,SAAAhB,GACRA,EAAKjB,KAAOA,IACdiB,EAAKR,QAAS,EACdQ,EAAKL,YAAa,IAAIhC,MAAOsD,qBAIjC,EAAKjD,SAAS,CACZ6B,W,wEAIF,OACE,yBAAKpB,UAAU,cACb,0CACA,kBAAC,EAAD,CAASF,QAASK,KAAKL,UACvB,kBAAC,EAAD,CACEsB,MAAOjB,KAAKrB,MAAMsC,MAClBP,WAAYV,KAAKU,WACjBC,SAAUX,KAAKmC,wB,GAxDP7B,IAAMC,WCAxB+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d8df3ada.chunk.js","sourcesContent":["import React from 'react';\r\nimport './AddTask.css';\r\n\r\nclass AddTask extends React.Component {\r\n  state = {\r\n    text: '',\r\n    checked: false,\r\n    date: new Date().toISOString().slice(0, 10)\r\n  }\r\n\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    })\r\n  }\r\n\r\n  handleText = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    })\r\n  }\r\n\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    })\r\n  }\r\n\r\n  handleClick = () => {\r\n    const { text, checked, date, } = this.state;\r\n    const newTask = this.props.addTask(text.trim(), date, checked);\r\n    if (newTask) {\r\n      this.setState({\r\n        text: '',\r\n        checked: false,\r\n        date: new Date().toISOString().slice(0, 10)\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"addTask\">\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"textInput\"\r\n            placeholder=\"add new task\"\r\n            value={this.state.text}\r\n            onChange={this.handleText}\r\n          />\r\n        </div>\r\n        <div className=\"infoAdd\">\r\n          <label htmlFor=\"date\" className=\"dateLabel\">Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            className=\"dateInput\"\r\n            value={this.state.date}\r\n            min={this.state.date}\r\n            onChange={this.handleDate}\r\n          />\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"important\"\r\n            className=\"checkboxInput\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckbox}\r\n          />\r\n          <label htmlFor=\"important\" className=\"checkboxLabel\" >Important</label>\r\n        </div>\r\n        <button\r\n          onClick={this.handleClick}\r\n          className=\"btnAdd\"\r\n        >\r\n          ADD\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;","import React from 'react';\r\nimport './TaskItem.css';\r\n\r\nconst TaskItem = ({ task, deleteTask, doneTask }) => {\r\n\r\n  if (task.active) {\r\n    return (\r\n      <div className=\"taskItem\">\r\n        {task.important ?\r\n          <p className='red'>{task.text.toUpperCase()}</p> : <p>{task.text}</p>\r\n        }\r\n        <small>{task.date}</small>\r\n        <button onClick={() => doneTask(task.id)} className=\"doneBtn\">\r\n          Done\r\n      </button>\r\n        <button onClick={() => deleteTask(task.id)} className=\"closeBtn\">\r\n          X\r\n      </button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className=\"taskItemDone\">\r\n          <p className=\"taskText\">{task.text} <i><small>({task.date})</small></i></p>\r\n          <div>\r\n            <p className=\"done\">Done: {task.finishDate}</p>\r\n          </div>\r\n          <button onClick={() => deleteTask(task.id)} className=\"closeBtn\">\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default TaskItem;","import React from 'react';\r\nimport './TaskList.css';\r\nimport TaskItem from '../TaskItem/TaskItem';\r\n\r\nconst TaskList = ({ tasks, deleteTask, doneTask }) => {\r\n\r\n  const activeTasks = tasks.filter(item => item.active === true)\r\n  const doneTasks = tasks.filter(item => item.active === false)\r\n\r\n  doneTasks.reverse();\r\n  if (activeTasks.length > 2) {\r\n    activeTasks.sort((a, b) => {\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0\r\n    })\r\n  }\r\n\r\n  const taskActive = activeTasks.map(item => <TaskItem key={item.id} task={item} deleteTask={deleteTask} doneTask={doneTask} />)\r\n  const taskDone = doneTasks.map(item => <TaskItem key={item.id} task={item} deleteTask={deleteTask} doneTask={doneTask} />)\r\n\r\n  return (\r\n    <>\r\n      {tasks.length > 0 ?\r\n        <div className=\"taskList\">\r\n          {taskActive.sort()}\r\n        </div>\r\n        : null\r\n      }\r\n      {doneTasks.length > 5 ? <p>Last 5 tasks:</p> : null}\r\n      <div>{taskDone.slice(0, 5)}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import React from 'react';\nimport './App.css';\nimport AddTask from '../Task/AddTask/AddTask';\nimport TaskList from '../Task/TaskList/TaskList';\n\nclass App extends React.Component {\n  counter = 0;\n  state = {\n    tasks: []\n  }\n\n  addTask = (text, date, important) => {\n    if (text.length > 2) {\n\n      const task =\n      {\n        id: this.counter,\n        text,\n        date,\n        important,\n        active: true,\n        finishDate: '',\n      }\n      this.counter++;\n\n      this.setState((prevState) => ({\n        tasks: [...prevState.tasks, task]\n      }))\n      return true\n    }\n  }\n\n  deleteTask = (id) => {\n    let tasks = [...this.state.tasks];\n    tasks = tasks.filter(item => item.id !== id)\n    this.setState({\n      tasks,\n    })\n  }\n\n  changeTaskStatus = (id) => {\n    const tasks = [...this.state.tasks];\n    tasks.forEach(item => {\n      if (item.id === id) {\n        item.active = false\n        item.finishDate = new Date().toLocaleString()\n      }\n    })\n\n    this.setState({\n      tasks,\n    })\n  }\n  render() {\n    return (\n      <div className=\"wrapperApp\">\n        <h1>To-Do List</h1>\n        <AddTask addTask={this.addTask} />\n        <TaskList\n          tasks={this.state.tasks}\n          deleteTask={this.deleteTask}\n          doneTask={this.changeTaskStatus}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}